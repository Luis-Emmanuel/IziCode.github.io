import{j as a,a as e}from"./index-5fd20af4.js";import{c as r}from"./cecyIco-5a0f09a4.js";import{c as o}from"./ejercicio-51ad8792.js";import{M as n}from"./MascotaTip-191ab803.js";const i="/assets/lista-55e7f832.png",u=()=>{const s={mascota:r,contenido:`Además, es recomendable que pruebes los algoritmos que creas, ya que esto te 
        ayudará a identificar posibles errores y hacer ajustes necesarios para que funcionen correctamente. 
        Por último, es importante tener en cuenta que los algoritmos pueden ser mejorados y optimizados a 
        medida que se adquiere más experiencia en programación, por lo que siempre es útil revisar y 
        refactorizarlos.`};return a("div",{className:"curso-pagina indagando-fu",children:[e("div",{className:"titular-curso",children:e("h1",{children:"conceptos básicos"})}),e("section",{children:a("div",{className:"parrafo-flex",children:[e("picture",{children:e("img",{src:r,alt:"cecy"})}),e("p",{children:"Bueno, es hora de comenzar a profundizar en la programación, así que es hora de ver los conceptos básicos que nos encontraremos siempre en este mundillo de la programación. Por lo tanto, son de suma importancia los temas que veremos a continuación. (⌐■_■)"})]})}),e("div",{className:"subtitulo-curso",children:e("h2",{children:"más y más algoritmos"})}),e("section",{children:a("div",{className:"parrafo-no-flex",children:[e("p",{children:"Como ya te explicó mi compañera Pymu lo que son los algoritmos y un ejemplo de estos en la introducción, vamos a seguir reforzando dicho conocimiento ya que es sumamente importante. Pero qué mejor forma para aprenderlos que poniéndolo en práctica. (╹ڡ╹ )"}),e("p",{children:"Para ello, trata de escribir 3 algoritmos:"}),a("div",{className:"lista-flex",children:[a("ol",{children:[e("li",{children:"1. Un algoritmo donde describas una serie de pasos a detalle de cómo te preparas tu desayuno favorito."}),e("li",{children:"2. Un algoritmo donde describas una serie de pasos a detalle donde expliques cómo es tu proceso para llegar a la escuela o trabajo."}),e("li",{children:"3. Un algoritmo donde describas una serie de pasos a detalle donde expliques cómo te preparas para ir a dormir."})]}),e("picture",{children:e("img",{src:o,alt:"ejercicio"})})]}),e("p",{children:"Verás que cuando se trata de hacer un algoritmo para un programa en concreto, no podemos saltarnos prácticamente ningún paso. Podremos hacerlo de alguna manera simplificada o sencilla, pero sin saltarnos ningún paso para resolver un problema. (ง •_•)ง"})]})}),a("div",{className:"tip-flex",children:[e(n,{mascota:s.mascota,contenido:s.contenido}),a("p",{children:["Mira, te topaste con el primer ",e("span",{children:"mascota tip"})," de IziCode. A lo largo de los cursos, aparecerán de vez en cuando más mascota tips por parte mía o de mis compañeros Pymu y Javi para proporcionarte información extra sobre algún tema."]})]}),e("div",{className:"subtitulo-curso",children:e("h2",{children:"un vistazo a las estructuras de datos"})}),e("section",{children:a("div",{className:"parrafo-no-flex",children:[e("p",{children:"Ahora daremos un vistazo a lo que son las estructuras de datos. No te preocupes si no terminas de comprender la idea, ya que estas las veremos más a profundidad en otros cursos, pero es importante que vayamos haciendo mención de ellas. ^_^"}),e("p",{children:"Las estructuras de datos son una manera de organizar y almacenar información de una forma eficiente para que puedas procesarla más fácilmente después. Son como cajas donde puedes guardar cosas de diferentes maneras dependiendo de cómo quieres acceder a ellas y qué tan rápido necesitas accederlas."}),e("p",{children:'Por ejemplo, si tienes una lista de tareas por hacer, puedes guardarlas en una estructura de datos llamada "lista". Si necesitas hacer algo con la primera tarea de la lista, es fácil encontrarla en la parte superior de la lista. Si necesitas hacer algo con la última tarea de la lista, es fácil encontrarla en la parte inferior.'}),e("picture",{children:e("img",{src:i,alt:"lista"})}),e("p",{children:'Hay diferentes tipos de estructuras de datos que funcionan mejor para diferentes situaciones. Por ejemplo, si necesitas buscar rápidamente un elemento específico en tu lista, puede que sea mejor usar una estructura de datos llamada "tabla hash". Pero como mencioné antes, no te preocupes, eventualmente iremos entendiendo qué son estas llamadas estructuras de datos. Claro que si te da curiosidad saber más del tema, puedes investigar un poco más por cuenta propia. (▀̿Ĺ̯▀̿ ̿)'}),e("h3",{className:"titulo-interno",children:"Ejemplos de estructuras de datos básicas como arreglos y listas"}),e("p",{children:"Un par de ejemplos sencillos para que tengas una dia algo más clara de lo que he estado explicando sobre las estructuras de datos sería lo siguiente:"}),e("div",{className:"lista-no-flex",children:a("ul",{children:[a("li",{children:[e("span",{children:"⟫ Arreglo:"})," Imagina que tienes una lista de números y quieres sumarlos todos. Puedes guardar estos números en un arreglo y luego recorrer el arreglo para sumarlos uno por uno. Por ejemplo, [1, 2, 3, 4, 5] es un arreglo de 5 números."]}),a("li",{children:[e("span",{children:"⟫ Lista:"}),' Supongamos que tienes una lista de tareas por hacer y quieres agregar una tarea nueva. Puedes guardar estas tareas en una lista y luego agregar la nueva tarea al final de la lista. Por ejemplo, ["Hacer la cama", "Lavar los platos", "Hacer ejercicio"] es una lista de 3 tareas.']})]})}),e("p",{children:"Estos son solo ejemplos simples, pero los arreglos y las listas pueden ser mucho más grandes y complejos dependiendo de las necesidades del problema a resolver. Espero que esto te ayude a tener una idea más clara de lo que son y cómo se utilizan estas estructuras de datos. (ง •_•)ง"})]})})]})};export{u as default};
